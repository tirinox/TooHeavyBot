class LangEnglish:
    KEY = 'eng'

    def __init__(self):
        # common

        self.back = 'Back'
        self.cancel = 'Cancel'
        self.skip = 'Skip'

        # main menu

        self.hello = "Hi! I'm a trainer robot. I will help you to drop or gain body weight."

        self.mm_aim_percent = 'Weight progress'
        self.mm_settings = 'Settings'

        # settings

        self.s_title = 'Bot settings:'
        self.s_timezone = 'Time zone'
        self.s_notification = 'Notification'
        self.s_language = 'Language'
        self.s_best_weight = 'My perfect weight'

        self.s_lang_hi = 'Hi / –ü—Ä–∏–≤–µ—Ç!'
        self.s_lang_set = 'English is set.'
        self.s_russian = 'üá∑üá∫ –†—É—Å—Å–∫–∏–π'
        self.s_english = 'üá¨üáß English'

        # settings -> time zone

        self.time_zone_prompt = ("In order to send you notifications in time,"
                                 "I need to know your time zone.\n\n"
                                 "You can send me your location. You don't have to "
                                 "send me your exact address. Just send me where "
                                 "your city is.")
        self.time_zone_err_bad_loc = ('–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏. '
                                      '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤—Ä—É—á–Ω—É—é:')
        self.time_zone_ok = lambda tz_name: f'–ú—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏, —á—Ç–æ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <b>{tz_name}</b>. –í–µ—Ä–Ω–æ?\n'
        self.time_zone_unknown_city = '–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞...'
        self.send_location = 'üìç Send my location'

        # setting -> notification

        self.s_not_dont = '–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å'
        self.s_not_ask_1 = '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú –∏–ª–∏ –ß–ß –ú–ú - 24 —á–∞—Å–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: "8:00" –∏–ª–∏ "12 05".'
        self.s_not_ask = f'–î–∞–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏–º –Ω–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞–º –ø–æ—Ä–∞ –≤–Ω–µ—Å—Ç–∏ –≤–µ—Å. {self.s_not_ask_1}'
        self.s_not_off = '–ù–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ!'
        self.s_not_on = lambda d_hh, d_mm: f'–ù–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –û–Ω–æ –ø—Ä–æ–∑–≤—É—á–∏—Ç —á–µ—Ä–µ–∑ {d_hh} —á. {d_mm} –º–∏–Ω.'
        self.s_not_err = f'–ö–∞–∂–µ—Ç—Å—è, –≤—ã –º–µ–Ω—è –Ω–µ —Ç–∞–∫ –ø–æ–Ω—è–ª–∏! {self.s_not_ask_1}'

        # service

        self.invalid_menu_option = "<pre>Unknown menu option!</pre>"
        self.invalid_number = "<pre>Bad number!</pre>"

        # aim percent

        self.ap_prompt_today_weight = 'Enter your weight today in kg:'
        self.ap_prompt_weight_err = 'Have to be a number between 30 and 500!'
        self.ap_drop_weight = lambda delta: f'You have dropped {delta:0.2f} –∫–≥ since yesterday.\n'
        self.ap_gain_weight = lambda delta: f'You have gained {delta:0.2f} –∫–≥ since yesterday.\n'
        self.ap_same_weight = 'You weight has not changed.\n'
        self.ap_progress = lambda percent: f'\nYour progress is\n<b>{percent:.2f} %</b>\n'
        self.ap_prompt_start_weight = 'Please enter your start weight (it is 0 % of aim) kg:'
        self.ap_prompt_aim_weight = 'Please enter your target weight (it is 100 %) kg:'
        self.ap_menu = "I will calculate your grade of progress."
        self.ap_enter_today = 'Enter weight today'
        self.ap_change_start = lambda s: f'Edit the start ({s:.1f} kg)'
        self.ap_change_aim = lambda s: f'Edit the aim ({s:.1f} kg)'

        # best weight

        self.bw_prompt_height = 'What is your height in cm?'
        self.bw_prompt_height_err = 'Must be a number between 50 and 300!'
        self.bw_result = lambda result: f'Your perfect weight is {result} kg.'
        self.bw_prompt_sex = "What is your sex?"
        self.bw_male = 'Male'
        self.bw_female = 'Female'
