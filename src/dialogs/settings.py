from chat.msg_io import *
from util.date import *
import pytz
from tasks.notify_weight import activate_notification, deactivate_notification
from tasks.change_timezone import change_timezone
from timezonefinder import TimezoneFinder

tz_finder = TimezoneFinder(in_memory=True)


@sentence
async def ask_time_zone(io: DialogIO):
    prompt = (f'–ß—Ç–æ–±—ã –≤–æ–≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –Ω–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å.\n\n'
              '–í—ã –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã –º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–ª–∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å. –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ '
              '–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é –ª–æ–∫–∞—Ü–∏—é –∏–∑ –≤–∞—à–µ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞.')
              # '–ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã –º—ã –ø–æ–∏—Å–∫–∞–ª–∏ –≤ —Å–≤–æ–µ–π –±–∞–∑–µ:')

    back_text = '–ù–∞–∑–∞–¥'

    if not io.asked:
        io.ask(prompt, [
            [KeyboardButton('üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', request_location=True)],
            [KeyboardButton(back_text)]
        ])
    else:
        if io.text == back_text:
            io.back()
        elif io.location:
            tz_name = tz_finder.timezone_at(lng=io.location.longitude, lat=io.location.latitude)
            try:
                pytz.timezone(tz_name)
            except pytz.UnknownTimeZoneError:
                io.ask('–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏. '
                       '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤—Ä—É—á–Ω—É—é:')
            else:
                await change_timezone(io.profile, tz_name)
                io.reply(f'–ú—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏, —á—Ç–æ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <b>{tz_name}</b>. –í–µ—Ä–Ω–æ?\n').back()
        else:
            io.ask('–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞...')


@sentence
async def ask_notification_time(io: DialogIO):
    not_notify_text = '–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å'
    back_text = '–ù–∞–∑–∞–¥'
    hint_time = '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú –∏–ª–∏ –ß–ß –ú–ú - 24 —á–∞—Å–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: "8:00" –∏–ª–∏ "12 05".'

    if not io.asked:
        io.ask(f'–î–∞–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏–º –Ω–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞–º –ø–æ—Ä–∞ –≤–Ω–µ—Å—Ç–∏ –≤–µ—Å. {hint_time}',
               keyboard=[[not_notify_text], [back_text]])
    else:
        if io.text == not_notify_text:
            await deactivate_notification(io.profile)
            io.back('–ù–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ!')
        elif io.text == back_text:
            io.back()
        else:
            try:
                hh, mm = hour_and_min_from_str(io.text)
                delta = await activate_notification(io.profile, hh, mm)
                d_hh, d_mm = hh_mm_from_timedelta(delta)
                io.back(f'–ù–∞–ø–æ–Ω–∏–º–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –û–Ω–æ –ø—Ä–æ–∑–≤—É—á–∏—Ç —á–µ—Ä–µ–∑ {d_hh} —á. {d_mm} –º–∏–Ω.')
            except (AssertionError, ValueError):
                io.ask(f'–ö–∞–∂–µ—Ç—Å—è, –≤—ã –º–µ–Ω—è –Ω–µ —Ç–∞–∫ –ø–æ–Ω—è–ª–∏! {hint_time}')


@sentence
async def settings_menu(io: DialogIO):
    result = create_menu(io, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:',
                         variants=[
                             [('–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', 1)],
                             [('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', 2)],
                             [('–ù–∞–∑–∞–¥', 'back')]
                         ])
    if result == 1:
        return io.push(ask_time_zone)
    elif result == 2:
        return io.push(ask_notification_time)
    elif result == 'back':
        return io.back()
